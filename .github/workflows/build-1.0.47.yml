name: build-1.0.47

on:
  push:
    branches:
      - 'master'
    tags:
      - '1.0.47-*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

env:
  DOCKERHUB_SLUG: crazymax/pure-ftpd
  GHCR_SLUG: ghcr.io/crazy-max/pure-ftpd

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ${{ env.DOCKERHUB_SLUG }}
            ${{ env.GHCR_SLUG }}
          tag-edge: true
          tag-match: (.*)-r
          tag-match-group: 1
          tag-latest: false
          label-custom: |
            org.opencontainers.image.title=Pure-FTPd
            org.opencontainers.image.description=Pure-FTPd with MySQL, PostgreSQL and LDAP support
            org.opencontainers.image.vendor=CrazyMax
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}
      -
        name: Build
        uses: docker/bake-action@v1
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.docker_meta.outputs.bake-file }}
          targets: image-all
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          DOCKERFILE: Dockerfile-1.0.47
      -
        name: Check manifest
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker buildx imagetools inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker buildx imagetools inspect ${{ env.GHCR_SLUG }}:${{ steps.docker_meta.outputs.version }}
      -
        name: Inspect image
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker pull ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.DOCKERHUB_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker pull ${{ env.GHCR_SLUG }}:${{ steps.docker_meta.outputs.version }}
          docker image inspect ${{ env.GHCR_SLUG }}:${{ steps.docker_meta.outputs.version }}
